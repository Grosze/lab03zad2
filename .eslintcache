[{"C:\\Users\\Mateusz\\Desktop\\Technologie_chmurowe\\laboratoria\\Technologia_Chmurowa_MKunze\\lab03\\zad2\\lab03react+redux\\src\\ui\\todos\\Todos.js":"1"},{"size":3295,"mtime":1611594175116,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"11391tj","C:\\Users\\Mateusz\\Desktop\\Technologie_chmurowe\\laboratoria\\Technologia_Chmurowa_MKunze\\lab03\\zad2\\lab03react+redux\\src\\ui\\todos\\Todos.js",["7"],"import React, {useState, useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport actions from '../../store/duck/actions.js';\r\n\r\nconst Todos = ({todos, onGetTodos, onPatchTodoCompleted, ondDeleteTodo, onPostTodo, filter, onShowAll, onShowTodo, onShowDone}) => {\r\n    const [input, setInput] = useState('');\r\n    const [input2, setInput2] = useState('');\r\n\r\n    useEffect(() => {onGetTodos()}, [])\r\n\r\n    return (\r\n        <div>\r\n            userId:<input value={input} onChange={y => setInput(y.target.value)}/>\r\n            title:<input value={input2} onChange={y => setInput2(y.target.value)}/>\r\n            <button onClick={() => {onPostTodo(todos.length + 1, input, input2, false); setInput(''); setInput2('')}}>ADD NEW TODO</button>\r\n            <button onClick={() => onShowAll()}>ALL</button>\r\n            <button onClick={() => onShowDone()}>DONE</button>\r\n            <button onClick={() => onShowTodo()}>TODO</button>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>userId</th>\r\n                        <th>title</th>\r\n                        <th>completed</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {todos.filter(x => {\r\n                        switch (filter) {\r\n                            case 'ALL':\r\n                                return true;\r\n\r\n                            case 'TODO':\r\n                                return x.completed === false;\r\n\r\n                            case 'DONE':\r\n                                return x.completed === true;\r\n\r\n                            default:\r\n                                return false\r\n                        }\r\n                    }).map(x => {\r\n                        return (\r\n                            <tr key={x.id}>\r\n                                <th>{x.userId}</th>\r\n                                <th>{x.title}</th>\r\n                                <th><input type='checkbox' checked={x.completed} onChange={() => onPatchTodoCompleted(x.id, !x.completed)}/></th>\r\n                                <th><button onClick={() => ondDeleteTodo(x.id)}>DELETE</button></th>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n\r\n            \r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos: state.todos,\r\n        filter: state.filter\r\n    };\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onGetTodos: () => {\r\n            dispatch(actions.getTodos());\r\n\r\n        },\r\n        onPatchTodoCompleted: (id, completed) => {\r\n            dispatch(actions.patchCompleted(id, completed));\r\n\r\n        },\r\n        ondDeleteTodo: (id) => {\r\n            dispatch(actions.deleteTodo(id));\r\n\r\n        },\r\n        onPostTodo: (id, userId, title, completed) => {\r\n            dispatch(actions.postTodo(id, userId, title, completed));\r\n        },\r\n        onShowAll: () => {dispatch(actions.showAll())},\r\n        onShowTodo: () => {dispatch(actions.showTodo())},\r\n        onShowDone: () => {dispatch(actions.showDone())}\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);",{"ruleId":"8","severity":1,"message":"9","line":10,"column":37,"nodeType":"10","endLine":10,"endColumn":39,"suggestions":"11"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onGetTodos'. Either include it or remove the dependency array. If 'onGetTodos' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["12"],{"desc":"13","fix":"14"},"Update the dependencies array to be: [onGetTodos]",{"range":"15","text":"16"},[411,413],"[onGetTodos]"]